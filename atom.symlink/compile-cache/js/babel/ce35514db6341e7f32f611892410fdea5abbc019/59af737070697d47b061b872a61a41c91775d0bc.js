Object.defineProperty(exports, '__esModule', {
	value: true
});
/** @babel */

var notificationTemplate = function notificationTemplate(props) {
	return '\n' + props.messages.reduce(function (prev, curr) {
		return '' + prev + curr.replace(/\r|\n/gm, '').replace('@', '  \n') + '\n\n';
	}, '') + '\n\n### Active Configuration\n|Editorconfig-Property|Applied Setting|\n|--------|------:|\n|`end_of_line`|`' + props.end_of_line + '`|\n|`charset`|`' + props.charset + '`|\n|`indent_style`|`' + props.indent_style + '`|\n|`indent_size`/ `tab_width`|`' + props.tab_width + '`|\n|`insert_final_newline`|`' + props.insert_final_newline + '`|\n|`trim_trailing_whitespace`|`' + props.trim_trailing_whitespace + '`|\n|`max_line_length`|`' + props.max_line_length + '`|\n\n_(auto: atom-editorconfig is not influencing that behavior. A full description of the properties can be found on editorconfig.org.)_\n\n' + (props.filename !== undefined && props.filename || '') + '\n';
};

var init = function init() {
	var textEditor = atom.workspace.getActiveTextEditor();
	if (textEditor && textEditor.getBuffer() && textEditor.getBuffer().editorconfig) {
		var buffer = textEditor.getBuffer();
		var ecfg = buffer.editorconfig;
		var settings = ecfg.settings;
		var lineEndings = { '\n': '\\n', '\r': '\\r', '\r\n': '\\r\\n' };

		var properties = {
			filename: buffer.getUri(),
			messages: ecfg.messages,
			// eslint-disable-next-line camelcase
			end_of_line: lineEndings[settings.end_of_line] || settings.end_of_line,
			charset: settings.charset,
			// eslint-disable-next-line camelcase
			indent_style: settings.indent_style,
			// eslint-disable-next-line camelcase
			tab_width: settings.tab_width,
			// eslint-disable-next-line camelcase
			insert_final_newline: settings.insert_final_newline,
			// eslint-disable-next-line camelcase
			trim_trailing_whitespace: settings.trim_trailing_whitespace,
			// eslint-disable-next-line camelcase
			max_line_length: settings.max_line_length
		};

		var notificationOptions = {
			description: notificationTemplate(properties),
			dismissable: true
		};

		switch (ecfg.state) {
			case 'success':
				atom.notifications.addSuccess(textEditor.getTitle(), notificationOptions);
				break;
			case 'warning':
				atom.notifications.addWarning(textEditor.getTitle(), notificationOptions);
				break;
			case 'error':
				atom.notifications.addError(textEditor.getTitle(), notificationOptions);
				break;
			default:
				atom.notifications.addInfo(textEditor.getTitle(), notificationOptions);
		}
	}
};

var subscriber = function subscriber() {
	atom.commands.add('atom-workspace', 'EditorConfig:show-state', init);
};

exports['default'] = subscriber;
exports.init = init;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3N0ZWZhbm8vLmRvdGZpbGVzL2F0b20uc3ltbGluay9wYWNrYWdlcy9lZGl0b3Jjb25maWcvY29tbWFuZHMvc2hvdy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLElBQU0sb0JBQW9CLEdBQUcsU0FBdkIsb0JBQW9CLENBQUcsS0FBSyxFQUFJO0FBQ3JDLGVBQ0MsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBQyxJQUFJLEVBQUUsSUFBSSxFQUFLO0FBQ3ZDLGNBQVUsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLFVBQU87RUFDeEUsRUFBRSxFQUFFLENBQUMsbUhBS2UsS0FBSyxDQUFDLFdBQVcsd0JBQ3JCLEtBQUssQ0FBQyxPQUFPLDZCQUNSLEtBQUssQ0FBQyxZQUFZLHlDQUNKLEtBQUssQ0FBQyxTQUFTLHFDQUNyQixLQUFLLENBQUMsb0JBQW9CLHlDQUN0QixLQUFLLENBQUMsd0JBQXdCLGdDQUN2QyxLQUFLLENBQUMsZUFBZSx1SkFJNUMsQUFBQyxLQUFLLENBQUMsUUFBUSxLQUFLLFNBQVMsSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFLLEVBQUUsQ0FBQSxRQUN0RDtDQUNELENBQUM7O0FBRUYsSUFBTSxJQUFJLEdBQUcsU0FBUCxJQUFJLEdBQVM7QUFDbEIsS0FBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO0FBQ3hELEtBQUksVUFBVSxJQUNiLFVBQVUsQ0FBQyxTQUFTLEVBQUUsSUFDdEIsVUFBVSxDQUFDLFNBQVMsRUFBRSxDQUFDLFlBQVksRUFBRTtBQUNyQyxNQUFNLE1BQU0sR0FBRyxVQUFVLENBQUMsU0FBUyxFQUFFLENBQUM7QUFDdEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztBQUNqQyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0FBQy9CLE1BQU0sV0FBVyxHQUFHLEVBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUMsQ0FBQzs7QUFFakUsTUFBTSxVQUFVLEdBQUc7QUFDbEIsV0FBUSxFQUFFLE1BQU0sQ0FBQyxNQUFNLEVBQUU7QUFDekIsV0FBUSxFQUFFLElBQUksQ0FBQyxRQUFROztBQUV2QixjQUFXLEVBQUUsV0FBVyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxRQUFRLENBQUMsV0FBVztBQUN0RSxVQUFPLEVBQUUsUUFBUSxDQUFDLE9BQU87O0FBRXpCLGVBQVksRUFBRSxRQUFRLENBQUMsWUFBWTs7QUFFbkMsWUFBUyxFQUFFLFFBQVEsQ0FBQyxTQUFTOztBQUU3Qix1QkFBb0IsRUFBRSxRQUFRLENBQUMsb0JBQW9COztBQUVuRCwyQkFBd0IsRUFBRSxRQUFRLENBQUMsd0JBQXdCOztBQUUzRCxrQkFBZSxFQUFFLFFBQVEsQ0FBQyxlQUFlO0dBQ3pDLENBQUM7O0FBRUYsTUFBTSxtQkFBbUIsR0FBRztBQUMzQixjQUFXLEVBQUUsb0JBQW9CLENBQUMsVUFBVSxDQUFDO0FBQzdDLGNBQVcsRUFBRSxJQUFJO0dBQ2pCLENBQUM7O0FBRUYsVUFBUSxJQUFJLENBQUMsS0FBSztBQUNqQixRQUFLLFNBQVM7QUFDYixRQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztBQUMxRSxVQUFNO0FBQUEsQUFDUCxRQUFLLFNBQVM7QUFDYixRQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztBQUMxRSxVQUFNO0FBQUEsQUFDUCxRQUFLLE9BQU87QUFDWCxRQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztBQUN4RSxVQUFNO0FBQUEsQUFDUDtBQUNDLFFBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0FBQUEsR0FDeEU7RUFDRDtDQUNELENBQUM7O0FBRUYsSUFBTSxVQUFVLEdBQUcsU0FBYixVQUFVLEdBQVM7QUFDeEIsS0FBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUseUJBQXlCLEVBQUUsSUFBSSxDQUFDLENBQUM7Q0FDckUsQ0FBQzs7cUJBRU0sVUFBVTtRQUFhLElBQUksR0FBSixJQUFJIiwiZmlsZSI6Ii9ob21lL3N0ZWZhbm8vLmRvdGZpbGVzL2F0b20uc3ltbGluay9wYWNrYWdlcy9lZGl0b3Jjb25maWcvY29tbWFuZHMvc2hvdy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAYmFiZWwgKi9cblxuY29uc3Qgbm90aWZpY2F0aW9uVGVtcGxhdGUgPSBwcm9wcyA9PiB7XG5cdHJldHVybiBgXG4ke3Byb3BzLm1lc3NhZ2VzLnJlZHVjZSgocHJldiwgY3VycikgPT4ge1xuXHRyZXR1cm4gYCR7cHJldn0ke2N1cnIucmVwbGFjZSgvXFxyfFxcbi9nbSwgJycpLnJlcGxhY2UoJ0AnLCAnICBcXG4nKX1cXG5cXG5gO1xufSwgJycpfVxuXG4jIyMgQWN0aXZlIENvbmZpZ3VyYXRpb25cbnxFZGl0b3Jjb25maWctUHJvcGVydHl8QXBwbGllZCBTZXR0aW5nfFxufC0tLS0tLS0tfC0tLS0tLTp8XG58XFxgZW5kX29mX2xpbmVcXGB8XFxgJHtwcm9wcy5lbmRfb2ZfbGluZX1cXGB8XG58XFxgY2hhcnNldFxcYHxcXGAke3Byb3BzLmNoYXJzZXR9XFxgfFxufFxcYGluZGVudF9zdHlsZVxcYHxcXGAke3Byb3BzLmluZGVudF9zdHlsZX1cXGB8XG58XFxgaW5kZW50X3NpemVcXGAvIFxcYHRhYl93aWR0aFxcYHxcXGAke3Byb3BzLnRhYl93aWR0aH1cXGB8XG58XFxgaW5zZXJ0X2ZpbmFsX25ld2xpbmVcXGB8XFxgJHtwcm9wcy5pbnNlcnRfZmluYWxfbmV3bGluZX1cXGB8XG58XFxgdHJpbV90cmFpbGluZ193aGl0ZXNwYWNlXFxgfFxcYCR7cHJvcHMudHJpbV90cmFpbGluZ193aGl0ZXNwYWNlfVxcYHxcbnxcXGBtYXhfbGluZV9sZW5ndGhcXGB8XFxgJHtwcm9wcy5tYXhfbGluZV9sZW5ndGh9XFxgfFxuXG5fKGF1dG86IGF0b20tZWRpdG9yY29uZmlnIGlzIG5vdCBpbmZsdWVuY2luZyB0aGF0IGJlaGF2aW9yLiBBIGZ1bGwgZGVzY3JpcHRpb24gb2YgdGhlIHByb3BlcnRpZXMgY2FuIGJlIGZvdW5kIG9uIGVkaXRvcmNvbmZpZy5vcmcuKV9cblxuJHsocHJvcHMuZmlsZW5hbWUgIT09IHVuZGVmaW5lZCAmJiBwcm9wcy5maWxlbmFtZSkgfHwgJyd9XG5gO1xufTtcblxuY29uc3QgaW5pdCA9ICgpID0+IHtcblx0Y29uc3QgdGV4dEVkaXRvciA9IGF0b20ud29ya3NwYWNlLmdldEFjdGl2ZVRleHRFZGl0b3IoKTtcblx0aWYgKHRleHRFZGl0b3IgJiZcblx0XHR0ZXh0RWRpdG9yLmdldEJ1ZmZlcigpICYmXG5cdFx0dGV4dEVkaXRvci5nZXRCdWZmZXIoKS5lZGl0b3Jjb25maWcpIHtcblx0XHRjb25zdCBidWZmZXIgPSB0ZXh0RWRpdG9yLmdldEJ1ZmZlcigpO1xuXHRcdGNvbnN0IGVjZmcgPSBidWZmZXIuZWRpdG9yY29uZmlnO1xuXHRcdGNvbnN0IHNldHRpbmdzID0gZWNmZy5zZXR0aW5ncztcblx0XHRjb25zdCBsaW5lRW5kaW5ncyA9IHsnXFxuJzogJ1xcXFxuJywgJ1xccic6ICdcXFxccicsICdcXHJcXG4nOiAnXFxcXHJcXFxcbid9O1xuXG5cdFx0Y29uc3QgcHJvcGVydGllcyA9IHtcblx0XHRcdGZpbGVuYW1lOiBidWZmZXIuZ2V0VXJpKCksXG5cdFx0XHRtZXNzYWdlczogZWNmZy5tZXNzYWdlcyxcblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjYW1lbGNhc2Vcblx0XHRcdGVuZF9vZl9saW5lOiBsaW5lRW5kaW5nc1tzZXR0aW5ncy5lbmRfb2ZfbGluZV0gfHwgc2V0dGluZ3MuZW5kX29mX2xpbmUsXG5cdFx0XHRjaGFyc2V0OiBzZXR0aW5ncy5jaGFyc2V0LFxuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuXHRcdFx0aW5kZW50X3N0eWxlOiBzZXR0aW5ncy5pbmRlbnRfc3R5bGUsXG5cdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2FtZWxjYXNlXG5cdFx0XHR0YWJfd2lkdGg6IHNldHRpbmdzLnRhYl93aWR0aCxcblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjYW1lbGNhc2Vcblx0XHRcdGluc2VydF9maW5hbF9uZXdsaW5lOiBzZXR0aW5ncy5pbnNlcnRfZmluYWxfbmV3bGluZSxcblx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjYW1lbGNhc2Vcblx0XHRcdHRyaW1fdHJhaWxpbmdfd2hpdGVzcGFjZTogc2V0dGluZ3MudHJpbV90cmFpbGluZ193aGl0ZXNwYWNlLFxuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuXHRcdFx0bWF4X2xpbmVfbGVuZ3RoOiBzZXR0aW5ncy5tYXhfbGluZV9sZW5ndGhcblx0XHR9O1xuXG5cdFx0Y29uc3Qgbm90aWZpY2F0aW9uT3B0aW9ucyA9IHtcblx0XHRcdGRlc2NyaXB0aW9uOiBub3RpZmljYXRpb25UZW1wbGF0ZShwcm9wZXJ0aWVzKSxcblx0XHRcdGRpc21pc3NhYmxlOiB0cnVlXG5cdFx0fTtcblxuXHRcdHN3aXRjaCAoZWNmZy5zdGF0ZSkge1xuXHRcdFx0Y2FzZSAnc3VjY2Vzcyc6XG5cdFx0XHRcdGF0b20ubm90aWZpY2F0aW9ucy5hZGRTdWNjZXNzKHRleHRFZGl0b3IuZ2V0VGl0bGUoKSwgbm90aWZpY2F0aW9uT3B0aW9ucyk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnd2FybmluZyc6XG5cdFx0XHRcdGF0b20ubm90aWZpY2F0aW9ucy5hZGRXYXJuaW5nKHRleHRFZGl0b3IuZ2V0VGl0bGUoKSwgbm90aWZpY2F0aW9uT3B0aW9ucyk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnZXJyb3InOlxuXHRcdFx0XHRhdG9tLm5vdGlmaWNhdGlvbnMuYWRkRXJyb3IodGV4dEVkaXRvci5nZXRUaXRsZSgpLCBub3RpZmljYXRpb25PcHRpb25zKTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRhdG9tLm5vdGlmaWNhdGlvbnMuYWRkSW5mbyh0ZXh0RWRpdG9yLmdldFRpdGxlKCksIG5vdGlmaWNhdGlvbk9wdGlvbnMpO1xuXHRcdH1cblx0fVxufTtcblxuY29uc3Qgc3Vic2NyaWJlciA9ICgpID0+IHtcblx0YXRvbS5jb21tYW5kcy5hZGQoJ2F0b20td29ya3NwYWNlJywgJ0VkaXRvckNvbmZpZzpzaG93LXN0YXRlJywgaW5pdCk7XG59O1xuXG5leHBvcnQge3N1YnNjcmliZXIgYXMgZGVmYXVsdCwgaW5pdH07XG4iXX0=
//# sourceURL=/home/stefano/.dotfiles/atom.symlink/packages/editorconfig/commands/show.js
