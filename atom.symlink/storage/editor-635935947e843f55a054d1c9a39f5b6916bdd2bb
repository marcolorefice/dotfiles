{"version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":838,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/n4z4/lavoro/ZendCart"],"buffers":[{"text":"{\n\t\"name\" : \"zendcart/zendcart\",\n\t\"description\" : \"Cart in ZF2\",\n\t\"type\" : \"zf2-module\",\n\t\"authors\" : [{\n\t\t\t\"name\" : \"Vincenzo Provenza\",\n\t\t\t\"email\" : \"info@ilovecode.it\",\n\t\t\t\"homepage\" : \"http://ilovecode.it/\",\n\t\t\t\"role\" : \"Developer\"\n\t\t}, {\n\t\t\t\"name\" : \"Concetto Vecchio\",\n\t\t\t\"email\" : \"info@cvsolutions.it\",\n\t\t\t\"homepage\" : \"http://cvsolutions.it/\",\n\t\t\t\"role\" : \"Developer\"\n\t\t}\n\t],\n\t\"keywords\" : [\n\t\t\"zend cart\",\n\t\t\"cart\",\n\t\t\"e-commerce\",\n\t\t\"zf2 module\",\n\t\t\"carrello zf2\"\n\t],\n\t\"homepage\" : \"https://github.com/vikey89/ZendCart\",\n\t\"license\" : [\n\t\t\"BSD-3-Clause\"\n\t],\n\t\"require\" : {\n\t\t\"php\" : \">=5.3.3\",\n\t\t\"zendframework/zend-mvc\" : \"~2.4\",\n\t\t\"zendframework/zend-modulemanager\" : \"~2.4\",\n\t\t\"zendframework/zend-session\" : \"~2.4\"\n\t},\n\t\"autoload\" : {\n\t\t\"psr-0\" : {\n\t\t\t\"ZendCart\" : \"src\"\n\t\t},\n\t\t\"classmap\" : [\n\t\t\t\"./Module.php\"\n\t\t]\n\t},\n\t\"minimum-stability\" : \"beta\",\n\t\"support\" : {\n\t\t\"email\" : \"info@cvsolutions.it\"\n\t},\n\t\"repositories\" : [{\n\t\t\t\"name\" : \"ZendCart\",\n\t\t\t\"type\" : \"git\",\n\t\t\t\"url\" : \"https://github.com/vikey89/ZendCart.git\"\n\t\t}\n\t]\n}\n","markerStore":{"nextMarkerId":41,"markersById":{"0":{"range":{"start":{"row":30,"column":46},"end":{"row":30,"column":46}},"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"39":{"range":{"start":{"row":29,"column":0},"end":{"row":32,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false},"40":{"range":{"start":{"row":51,"column":0},"end":{"row":52,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":false}},"version":2},"history":{"version":3,"nextCheckpointId":124,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[29,30],[29,30]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,29],[29,30]],"newRange":[[29,29],[29,29]],"oldText":"k","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[29,29],[29,29]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,29],[29,29]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,28],[29,29]],"newRange":[[29,28],[29,28]],"oldText":"r","newText":""}},{"type":"change","content":{"oldRange":[[29,27],[29,28]],"newRange":[[29,27],[29,27]],"oldText":"o","newText":""}},{"type":"change","content":{"oldRange":[[29,26],[29,27]],"newRange":[[29,26],[29,26]],"oldText":"w","newText":""}},{"type":"change","content":{"oldRange":[[29,25],[29,26]],"newRange":[[29,25],[29,25]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[29,24],[29,25]],"newRange":[[29,24],[29,24]],"oldText":"m","newText":""}},{"type":"change","content":{"oldRange":[[29,23],[29,24]],"newRange":[[29,23],[29,23]],"oldText":"a","newText":""}},{"type":"change","content":{"oldRange":[[29,22],[29,23]],"newRange":[[29,22],[29,22]],"oldText":"r","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[29,22],[29,22]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,22],[29,22]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,21],[29,22]],"newRange":[[29,21],[29,21]],"oldText":"f","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[29,21],[29,21]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,21],[29,21]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,21],[29,21]],"newRange":[[29,21],[29,22]],"oldText":"","newText":"-"}},{"type":"group-end","snapshot":{"0":{"range":[[29,22],[29,22]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,22],[29,22]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,22],[29,22]],"newRange":[[29,22],[29,23]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[29,23],[29,23]],"newRange":[[29,23],[29,24]],"oldText":"","newText":"c"}},{"type":"group-end","snapshot":{"0":{"range":[[29,24],[29,24]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,24],[29,24]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,23],[29,24]],"newRange":[[29,23],[29,23]],"oldText":"c","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[29,23],[29,23]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,23],[29,23]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,23],[29,23]],"newRange":[[29,23],[29,24]],"oldText":"","newText":"v"}},{"type":"change","content":{"oldRange":[[29,24],[29,24]],"newRange":[[29,24],[29,25]],"oldText":"","newText":"c"}},{"type":"group-end","snapshot":{"0":{"range":[[29,25],[29,25]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,30],[29,30]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,30],[29,30]],"newRange":[[29,30],[29,31]],"oldText":"","newText":"~"}},{"type":"group-end","snapshot":{"0":{"range":[[29,31],[29,31]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,34],[29,34]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,33],[29,34]],"newRange":[[29,33],[29,33]],"oldText":"*","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[29,33],[29,33]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,33],[29,33]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,33],[29,33]],"newRange":[[29,33],[29,34]],"oldText":"","newText":"5"}},{"type":"group-end","snapshot":{"0":{"range":[[29,34],[29,34]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,34],[29,34]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,33],[29,34]],"newRange":[[29,33],[29,33]],"oldText":"5","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[29,33],[29,33]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,33],[29,33]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,33],[29,33]],"newRange":[[29,33],[29,34]],"oldText":"","newText":"4"}},{"type":"group-end","snapshot":{"0":{"range":[[29,34],[29,34]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,35],[29,35]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,35],[29,35]],"newRange":[[29,35],[29,36]],"oldText":"","newText":","}},{"type":"group-end","snapshot":{"0":{"range":[[29,36],[29,36]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,36],[29,36]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,36],[29,36]],"newRange":[[29,36],[30,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[30,0],[30,0]],"newRange":[[30,0],[30,2]],"oldText":"","newText":"\t\t"}},{"type":"change","content":{"oldRange":[[30,2],[30,2]],"newRange":[[30,2],[30,35]],"oldText":"","newText":"\"zendframework/zend-mvc\" : \"~2.4\""}},{"type":"group-end","snapshot":{"0":{"range":[[30,35],[30,35]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,25],[30,25]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,24],[30,25]],"newRange":[[30,24],[30,24]],"oldText":"c","newText":""}},{"type":"change","content":{"oldRange":[[30,23],[30,24]],"newRange":[[30,23],[30,23]],"oldText":"v","newText":""}},{"type":"change","content":{"oldRange":[[30,22],[30,23]],"newRange":[[30,22],[30,22]],"oldText":"m","newText":""}},{"type":"change","content":{"oldRange":[[30,22],[30,22]],"newRange":[[30,22],[30,23]],"oldText":"","newText":"e"}},{"type":"group-end","snapshot":{"0":{"range":[[30,23],[30,23]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,23],[30,23]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,23],[30,23]],"newRange":[[30,23],[30,24]],"oldText":"","newText":"v"}},{"type":"change","content":{"oldRange":[[30,24],[30,24]],"newRange":[[30,24],[30,25]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[30,25],[30,25]],"newRange":[[30,25],[30,26]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[30,26],[30,26]],"newRange":[[30,26],[30,27]],"oldText":"","newText":"t"}},{"type":"group-end","snapshot":{"0":{"range":[[30,27],[30,27]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,27],[30,27]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,27],[30,27]],"newRange":[[30,27],[30,28]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[30,28],[30,28]],"newRange":[[30,28],[30,29]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[30,29],[30,29]],"newRange":[[30,29],[30,30]],"oldText":"","newText":"n"}},{"type":"change","content":{"oldRange":[[30,30],[30,30]],"newRange":[[30,30],[30,31]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[30,31],[30,31]],"newRange":[[30,31],[30,32]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[30,32],[30,32]],"newRange":[[30,32],[30,33]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[30,33],[30,33]],"newRange":[[30,33],[30,34]],"oldText":"","newText":"r"}},{"type":"group-end","snapshot":{"0":{"range":[[30,34],[30,34]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,44],[30,44]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,44],[30,44]],"newRange":[[30,44],[30,45]],"oldText":"","newText":","}},{"type":"change","content":{"oldRange":[[30,45],[30,45]],"newRange":[[30,45],[31,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[31,0],[31,0]],"newRange":[[31,0],[31,2]],"oldText":"","newText":"\t\t"}},{"type":"change","content":{"oldRange":[[31,2],[31,2]],"newRange":[[31,2],[31,35]],"oldText":"","newText":"\"zendframework/zend-mvc\" : \"~2.4\""}},{"type":"group-end","snapshot":{"0":{"range":[[31,35],[31,35]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[31,25],[31,25]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[31,24],[31,25]],"newRange":[[31,24],[31,24]],"oldText":"c","newText":""}},{"type":"change","content":{"oldRange":[[31,23],[31,24]],"newRange":[[31,23],[31,23]],"oldText":"v","newText":""}},{"type":"change","content":{"oldRange":[[31,22],[31,23]],"newRange":[[31,22],[31,22]],"oldText":"m","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[31,22],[31,22]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[31,22],[31,22]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[31,22],[31,22]],"newRange":[[31,22],[31,23]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[31,23],[31,23]],"newRange":[[31,23],[31,24]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[31,24],[31,24]],"newRange":[[31,24],[31,25]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[31,25],[31,25]],"newRange":[[31,25],[31,26]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[31,26],[31,26]],"newRange":[[31,26],[31,27]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[31,27],[31,27]],"newRange":[[31,27],[31,28]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[31,28],[31,28]],"newRange":[[31,28],[31,29]],"oldText":"","newText":"n"}},{"type":"group-end","snapshot":{"0":{"range":[[31,29],[31,29]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,0],[30,45]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,0],[30,45]],"newRange":[[30,0],[30,0]],"oldText":"\t\t\"zendframework/zend-eventmanager\" : \"~2.4\",","newText":""}},{"type":"change","content":{"oldRange":[[29,36],[30,0]],"newRange":[[29,36],[29,36]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[29,36],[29,36]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,2],[29,36]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null},"reversed":true,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,2],[29,36]],"newRange":[[29,2],[29,35]],"oldText":"\"zendframework/zend-mvc\" : \"~2.4\",","newText":"\"zendframework/zend-mvc\" : \"~2.4\""}},{"type":"group-end","snapshot":{"0":{"range":[[29,35],[29,35]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,35],[29,35]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,35],[29,35]],"newRange":[[29,35],[30,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[30,0],[30,0]],"newRange":[[30,0],[30,2]],"oldText":"","newText":"\t\t"}},{"type":"change","content":{"oldRange":[[30,2],[30,2]],"newRange":[[30,2],[30,35]],"oldText":"","newText":"\"zendframework/zend-mvc\" : \"~2.4\""}},{"type":"group-end","snapshot":{"0":{"range":[[30,35],[30,35]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,25],[30,25]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,24],[30,25]],"newRange":[[30,24],[30,24]],"oldText":"c","newText":""}},{"type":"change","content":{"oldRange":[[30,23],[30,24]],"newRange":[[30,23],[30,23]],"oldText":"v","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[30,23],[30,23]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,23],[30,23]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,23],[30,23]],"newRange":[[30,23],[30,24]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[30,24],[30,24]],"newRange":[[30,24],[30,25]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[30,25],[30,25]],"newRange":[[30,25],[30,26]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[30,26],[30,26]],"newRange":[[30,26],[30,27]],"oldText":"","newText":"u"}},{"type":"group-end","snapshot":{"0":{"range":[[30,27],[30,27]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,27],[30,27]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,26],[30,27]],"newRange":[[30,26],[30,26]],"oldText":"u","newText":""}},{"type":"change","content":{"oldRange":[[30,25],[30,26]],"newRange":[[30,25],[30,25]],"oldText":"d","newText":""}},{"type":"change","content":{"oldRange":[[30,24],[30,25]],"newRange":[[30,24],[30,24]],"oldText":"o","newText":""}},{"type":"change","content":{"oldRange":[[30,24],[30,24]],"newRange":[[30,24],[30,25]],"oldText":"","newText":"u"}},{"type":"group-end","snapshot":{"0":{"range":[[30,25],[30,25]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,25],[30,25]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,24],[30,25]],"newRange":[[30,24],[30,24]],"oldText":"u","newText":""}},{"type":"change","content":{"oldRange":[[30,24],[30,24]],"newRange":[[30,24],[30,25]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[30,25],[30,25]],"newRange":[[30,25],[30,26]],"oldText":"","newText":"u"}},{"type":"group-end","snapshot":{"0":{"range":[[30,26],[30,26]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,26],[30,26]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,26],[30,26]],"newRange":[[30,26],[30,27]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[30,27],[30,27]],"newRange":[[30,27],[30,28]],"oldText":"","newText":"e"}},{"type":"group-end","snapshot":{"0":{"range":[[30,28],[30,28]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,28],[30,28]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,28],[30,28]],"newRange":[[30,28],[30,29]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[30,29],[30,29]],"newRange":[[30,29],[30,30]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[30,30],[30,30]],"newRange":[[30,30],[30,31]],"oldText":"","newText":"n"}},{"type":"group-end","snapshot":{"0":{"range":[[30,31],[30,31]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,31],[30,31]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,31],[30,31]],"newRange":[[30,31],[30,32]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[30,32],[30,32]],"newRange":[[30,32],[30,33]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[30,33],[30,33]],"newRange":[[30,33],[30,34]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[30,34],[30,34]],"newRange":[[30,34],[30,35]],"oldText":"","newText":"r"}},{"type":"group-end","snapshot":{"0":{"range":[[30,35],[30,35]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,35],[30,35]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[51,1],[51,1]],"newRange":[[51,1],[52,0]],"oldText":"","newText":"\n"}},{"type":"group-end","snapshot":{"0":{"range":[[30,35],[30,35]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[29,35],[29,35]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[29,35],[29,35]],"newRange":[[29,35],[29,36]],"oldText":"","newText":","}},{"type":"group-end","snapshot":{"0":{"range":[[29,36],[29,36]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[30,45],[30,45]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[30,45],[30,45]],"newRange":[[30,45],[30,46]],"oldText":"","newText":","}},{"type":"group-end","snapshot":{"0":{"range":[[30,46],[30,46]],"properties":{"type":"selection","editorId":4,"goalScreenRange":null,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/n4z4/lavoro/ZendCart/composer.json","digestWhenLastPersisted":"46597deddd51b8c7d3e850e534280d4e7ee92303","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"<?php\n/**\n * ZendCart\n * Simple Shopping Cart\n *\n * @package ZF2 Modules\n * @category Plugin\n * @copyright 2013\n * @version 1.0 Beta\n *\n * @author Vincenzo Provenza <info@ilovecode.it>\n * @author Concetto Vecchio  <info@cvsolutions.it>\n */\nnamespace ZendCart\\Controller\\Plugin;\n\nuse Zend\\Mvc\\Controller\\Plugin\\AbstractPlugin;\nuse Zend\\Session\\Container;\nuse Zend\\EventManager\\EventManagerAwareInterface;\nuse Zend\\EventManager\\EventManagerInterface;\nuse Zend\\EventManager\\EventManager;\nuse Zendcart\\Event\\CartEvent;\n\nclass ZendCart extends AbstractPlugin implements EventManagerAwareInterface\n{\n\n    /**\n     * @var $_session\n     */\n    private $_session;\n\n    /**\n     * @var $_config\n     */\n    private $_config;\n\n    /**\n     * @var $eventManager\n     */\n    protected $eventManager;\n\n    /**\n     * __construct\n     *\n     * @param array $config\n     */\n    public function __construct($config = array())\n    {\n        $this->_config = $config;\n        $this->_session = new Container('zfProducts');\n        $this->setEventManager(new EventManager());\n    }\n\n    /**\n     * Create the array of cart\n     *\n     * @param array $items\n     * @access private\n     * @return item products\n     */\n    private function _cart($items = array())\n    {\n    \treturn array(\n            'id'\t\t=> $items['id'],\n            'qty' \t\t=> $items['qty'],\n            'price' \t=> $this->_formatNumber($items['price']),\n            'name' \t\t=> $items['name'],\n        \t'options'\t=> isset($items['options']) ? $items['options'] : 0,\n            'date' \t  \t=> date('Y-m-d H:i:s', time()),\n            'vat'       => isset($items['vat']) ? $items['vat'] : $this->_config['vat']\n        );\n    }\n\n    /**\n     * Checks if the parameter is an array\n     * and different from zero\n     *\n     * @param array $items\n     * @access private\n     * @return boolean\n     */\n    private function _isArray($items)\n    {\n        $items = (array) $items;\n        if (!is_array($items) or count($items) == 0)\n        {\n            throw new \\Exception('The method takes an array.');\n            return FALSE;\n        }\n    }\n\n    /**\n     * Checks if the parameter is an array\n     * and different from zero\n     *\n     * @param array $items\n     * @access private\n     * @return boolean\n     */\n    private function _isCartArray($items = array())\n    {\n        if (!is_array($items) or count($items) == 0)\n        {\n            return FALSE;\n        }\n        return TRUE;\n    }\n\n    /**\n     * Checks if the parameter qty is numeric\n     * and if it is different from zero\n     *\n     * @param array $items\n     * @access private\n     * @return boolean\n     */\n    private function _checkQty($items)\n    {\n        if (!is_numeric($items['qty']) or $items['qty'] == 0)\n        {\n            throw new \\Exception('The parameter qty must be in numeric and different from zero.');\n            return FALSE;\n        }\n    }\n\n    /**\n     * Verifies that the parameters are\n     *\n     * @param array $items\n     * @access private\n     * @return boolean\n     */\n    private function _checkCartInsert($items)\n    {\n        $this->_isArray($items);\n        $this->_checkQty($items);\n        if (!isset($items['id']) or ! isset($items['qty']) or ! isset($items['price']) or ! isset($items['name']))\n        {\n            throw new \\Exception('The Insert method takes an array that must contain id, qty, price, name.');\n            return FALSE;\n        }\n        return TRUE;\n    }\n\n    /**\n     * Verifies that the token,qty\n     * parameters exists\n     *\n     * @param array $items\n     * @accessprivate\n     * @return boolean\n     */\n    private function _checkCartUpdate($items)\n    {\n        $this->_isArray($items);\n        $this->_checkQty($items);\n\n        if (!isset($items['token']) or ! isset($items['qty']))\n        {\n            throw new \\Exception('The Update method takes an array that must contain token.');\n            return FALSE;\n        }\n        return TRUE;\n    }\n\n    /**\n     * Verifies that the token\n     * parameter exists\n     *\n     * @param array $items\n     * @access private\n     * @return boolean\n     */\n    private function _checkCartRemove($items)\n    {\n        if (!isset($items['token']))\n        {\n            throw new \\Exception('The Remove method takes an array that must contain token.');\n            return FALSE;\n        }\n        return TRUE;\n    }\n\n    /**\n     * Check if there are options\n     *\n     * @param array $items\n\t * @access\tprivate\n\t * @return boolean\n     */\n    private function _checkHasOption($token)\n    {\n    \tif (!isset($this->_session['products'][$token]['options']) OR count($this->_session['products'][$token]['options']) == 0)\n\t\t{\n\t\t\treturn FALSE;\n\t\t}\n\t\treturn TRUE;\n    }\n\n    /**\n     * Number_format for the price,\n     * total, sub-total, vat.\n     *\n     * @param array $items\n\t * @access\tprivate\n\t * @return\tinteger\n     */\n    private function _formatNumber($number)\n    {\n        if ($number == '')\n        {\n        \treturn FALSE;\n        }\n        return number_format($number, 2, '.', ',');\n    }\n\n    /**\n     * Add a product to cart\n     *\n     * @example $this->ZendCart()->insert($request->getPost());\n     * @example $this->ZendCart()->insert(array(id => '', 'qty' => '', 'price' => '', 'name' => ''));\n     * @param array $items\n     * @access public\n     * @return null\n     */\n    public function insert($items = array())\n    {\n        if ($this->_checkCartInsert($items) === TRUE)\n        {\n\n            $isNew = true;\n            $shouldUpdate = $this->_config['on_insert_update_existing_item'];\n\n            //check if should update existing product\n            if($shouldUpdate){\n                $products = is_array($this->_session['products']) ? $this->_session['products'] : array();\n                foreach ($products as $token => $existing_item) {\n                    if($existing_item['id'] === $items['id']){\n                        //fount same product already on cart\n                        $isNew = false;\n                        $items = array('token'=>$token, 'qty'=> $existing_item['qty']+$items['qty']);\n                        break;\n                    }\n                }\n            }\n\n            if($isNew){\n                $token = sha1($items['id'].$items['qty'].time());\n\n                if (is_array($this->_session['products']))\n                {\n                    $this->_session['products'][$token] = $this->_cart($items);\n                } else {\n                    //creo il carrello in sessione\n                    $this->_session['products'] = array();\n                    $this->_session->cartId = $this->_session->getManager()->getId();\n                    $this->getEventManager()->trigger(CartEvent::EVENT_CREATE_CART_POST, $this, array('cart_id'=>$this->_session->cartId));\n                    //aggiungo elemento\n                    $this->_session['products'][$token] = $this->_cart($items);\n                }\n                //evento per elemento aggiunto\n                $this->trigger(CartEvent::EVENT_ADD_ITEM_POST, $token, $this->_session['products'][$token], $this);\n            }else{\n                //update existing product\n                $this->update($items);\n            }\n\n        }\n    }\n\n    /**\n     * Update the quantity of a product\n     *\n     * @example $this->ZendCart()->update(array('token' => '', 'qty' => ''));\n     * @param array $items\n     * @access public\n     * @return null\n     */\n    public function update($items = array())\n    {\n        if ($this->_checkCartUpdate($items) === TRUE)\n        {\n\t\t\t$this->_session['products'][$items['token']]['qty'] = $items['qty'];\n            $this->trigger(CartEvent::EVENT_UPDATE_QUANTITY_POST, $items['token'], $this->_session['products'][$items['token']], $this);\n        }\n    }\n\n    /**\n     * Delete the item from the cart\n     *\n     * @example $this->ZendCart()->remove(array('token' => ''));\n     * @param array $items\n     * @access public\n     * @return null\n     */\n    public function remove($items = array())\n    {\n        if (($this->_checkCartRemove($items) === TRUE) && isset($this->_session['products'][$items['token']]) )\n        {\n            $cart = $this->_session['products'][$items['token']];\n            unset($this->_session['products'][$items['token']]);\n            $this->trigger(CartEvent::EVENT_REMOVE_ITEM_POST, $items['token'], $cart, $this);\n        }\n    }\n\n    /**\n     * Delete all items from the cart\n     *\n     * @access public\n     * @return null\n     */\n    public function destroy()\n    {\n        $this->_session->offsetUnset('products');\n        $this->getEventManager()->trigger(CartEvent::EVENT_DELETE_CART_POST, $this, ['cart_id'=>$this->_session->cartId]);\n    }\n\n    /**\n     * Extracts all items from the cart\n     *\n     * @access public\n     * @return array\n     */\n    public function cart()\n    {\n        $items = $this->_session->offsetGet('products');\n        if ($this->_isCartArray($items) === TRUE)\n        {\n            $items = array();\n            foreach ($this->_session->offsetGet('products') as $key => $value)\n            {\n                $items[$key] = array(\n                    'id' \t\t=> \t$value['id'],\n                    'qty' \t\t=> \t$value['qty'],\n                    'price' \t=> \t$value['price'],\n                    'name' \t\t=> \t$value['name'],\n                    'sub_total'\t=> \t$this->_formatNumber($value['price'] * $value['qty']),\n                \t'options' \t=> \t$value['options'],\n                    'date' \t\t=> \t$value['date'],\n                    'vat'       =>  $value['vat']\n                );\n            }\n            return $items;\n        }\n    }\n\n    /**\n     * Counts the total number of\n     * items in cart\n     *\n\t * @access\tpublic\n\t * @return\tinteger\n     */\n    public function total_items()\n    {\n        $total_items = 0;\n        $items = $this->_session->offsetGet('products');\n        if ($this->_isCartArray($items) === TRUE)\n        {\n            foreach ($items as $key)\n            {\n                $total_items =+ ($total_items + $key['qty']);\n            }\n            return $total_items;\n        }\n    }\n\n    /**\n     * Counts the total number of\n     * items in cart\n     *\n     * @access public\n     * @return array\n     */\n    public function total()\n    {\n        if ($this->_isCartArray($this->cart()) === TRUE)\n        {\n            $price = 0;\n            $vat = 0;\n            foreach ($this->cart() as $key)\n            {\n                $item_price = ($key['price'] * $key['qty']);\n                $item_vat   = (($item_price/100)*$key['vat']);\n                // $price =+ ($price + ($key['price'] * $key['qty']));\n                $price += $item_price;\n                $vat   += $item_vat;\n            }\n\n            // $params = $this->_config['vat'];\n            // $vat = $this->_formatNumber((($price / 100) * $params));\n\n            return array(\n                'sub-total' => $this->_formatNumber($price),\n                'vat' \t\t=> $this->_formatNumber($vat),\n                'total' \t=> $this->_formatNumber($price + $vat)\n            );\n        }\n    }\n\n    /**\n     * item_options\n     *\n     * Returns the an array of options, for a particular product token.\n     *\n     * @access\tpublic\n     * @return\tarray\n     */\n    public function item_options($token)\n    {\n    \tif($this->_checkHasOption($token) === TRUE)\n    \t{\n    \t\treturn $this->_session['products'][$token]['options'];\n    \t}\n    }\n\n    public function getEventManager()\n    {\n        return $this->eventManager;\n    }\n\n    public function setEventManager(EventManagerInterface $eventManager)\n    {\n        $eventManager->setIdentifiers(\n            'ZendCart\\Service\\Cart',\n            __CLASS__,\n            get_called_class(),\n            'zendcart'\n        );\n        // $eventManager->setEventClass('ZendCart\\Service\\Cart');\n\n        $this->eventManager = $eventManager;\n        return $this;\n    }\n\n\n    private function trigger($name, $token, $cartItem, $target=null)\n    {\n        $cartId = $this->_session->cartId;\n        $event = new CartEvent();\n        $event->setCartId($cartId)\n            ->setItemToken($token)\n            ->setCartItem($cartItem);\n\n        if ($target)\n            $event->setTarget($target);\n\n        $this->getEventManager()->trigger($name, $event);\n    }\n}","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":8},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/n4z4/lavoro/ZendCart/src/Zendcart/Controller/Plugin/ZendCart.php","digestWhenLastPersisted":"2e4fc948e8eedfd084f76b68353093daf4c55d47","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"<?php\n/**\n * ZendCart\n * Simple Shopping Cart\n *\n * @package ZF2 Modules\n * @category Plugin\n * @copyright 2013\n * @version 1.0 Beta\n *\n * @author Stefano Corallo <stefanorg@gmail.com>\n */\nnamespace ZendCart\\Event;\n\nuse Zend\\EventManager\\Event;\n\nclass CartEvent extends Event {\n\n    const EVENT_ADD_ITEM             = 'addItem';\n    const EVENT_ADD_ITEM_POST        = 'addItem.post';\n    const EVENT_REMOVE_ITEM          = 'removeItem';\n    const EVENT_REMOVE_ITEM_POST     = 'removeItem.post';\n    const EVENT_CREATE_CART          = 'createCart';\n    const EVENT_CREATE_CART_POST     = 'createCart.post';\n    const EVENT_DELETE_CART          = 'removeCart';\n    const EVENT_DELETE_CART_POST     = 'removeCart.post';\n    const EVENT_EMPTY_CART           = 'emptyCart';\n    const EVENT_EMPTY_CART_POST      = 'emptyCart.post';\n    const EVENT_UPDATE_QUANTITY      = 'updateQuantities';\n    const EVENT_UPDATE_QUANTITY_POST = 'updateQuantities.post';\n\n\n    protected $cartId;\n    protected $itemToken;\n    protected $cartItem;\n\n\n    /**\n     * Gets the value of cartId.\n     *\n     * @return mixed\n     */\n    public function getCartId()\n    {\n        return $this->cartId;\n    }\n\n    /**\n     * Sets the value of cartId.\n     *\n     * @param mixed $cartId the cart id\n     *\n     * @return self\n     */\n    public function setCartId($cartId)\n    {\n        $this->setParam('cartId', $cartId);\n        $this->cartId = $cartId;\n\n        return $this;\n    }\n\n    /**\n     * Gets the value of cartId.\n     *\n     * @return mixed\n     */\n    public function getCartItem()\n    {\n        return $this->cartItem;\n    }\n\n    /**\n     * Sets the value of cartId.\n     *\n     * @param mixed $cartId the cart id\n     *\n     * @return self\n     */\n    public function setCartItem($cartItem)\n    {\n        $this->setParam('cartItem', $cartItem);\n        $this->cartItem = $cartItem;\n\n        return $this;\n    }\n\n    /**\n     * Gets the value of itemToken.\n     *\n     * @return mixed\n     */\n    public function getItemToken()\n    {\n        return $this->itemToken;\n    }\n\n    /**\n     * Sets the value of itemToken.\n     *\n     * @param mixed $itemToken the item token\n     *\n     * @return self\n     */\n    public function setItemToken($itemToken)\n    {\n        $this->setParam('itemToken', $itemToken);\n        $this->itemToken = $itemToken;\n\n        return $this;\n    }\n}","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":12},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/n4z4/lavoro/ZendCart/src/Zendcart/Event/CartEvent.php","digestWhenLastPersisted":"89cc486135b427207a8a8bfa4f53f362e8e3ad9a","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"<?php\nnamespace ZendCart\\Factory;\n\nuse Zend\\ServiceManager\\FactoryInterface;\nuse Zend\\ServiceManager\\ServiceLocatorInterface;\nuse ZendCart\\Controller\\Plugin\\ZendCart;\n\nclass ZendCartFactory implements FactoryInterface\n{\n    public function createService(ServiceLocatorInterface $servicelocator)\n    {\n        $allServices = $servicelocator->getServiceLocator();\n        $config = $allServices->get('ServiceManager')->get('Configuration');\n\n        if (!isset($config['zendcart']))\n        {\n            throw new \\Exception('Configuration ZendCart not set.');\n        }\n\n        if (!isset($config['zendcart']['vat']))\n        {\n            throw new \\Exception('No vat index defined.');\n        }\n\n        $default = array(\n            'on_insert_update_existing_item' => false\n        );\n\n        $options = array_merge($default, $config['zendcart']);\n\n        return new ZendCart($options);\n    }\n}","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":16},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/n4z4/lavoro/ZendCart/src/Zendcart/Factory/ZendCartFactory.php","digestWhenLastPersisted":"f6ccc02f7ae680daee66035ee197d0d24123a642","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"<?php\n/**\n * Zend Framework (http://framework.zend.com/)\n *\n * @link      http://github.com/zendframework/Zendcart for the canonical source repository\n * @copyright Copyright (c) 2005-2012 Zend Technologies USA Inc. (http://www.zend.com)\n * @license   http://framework.zend.com/license/new-bsd New BSD License\n */\nnamespace ZendCart;\n\nuse Zend\\ModuleManager\\Feature\\AutoloaderProviderInterface;\nuse Zendcart\\Controller\\Plugin\\ZendCart;\n\nclass Module implements AutoloaderProviderInterface\n{\n\n    public function getAutoloaderConfig()\n    {\n        return array(\n            'Zend\\Loader\\ClassMapAutoloader' => array(\n                __DIR__ . '/autoload_classmap.php'\n            ),\n            'Zend\\Loader\\StandardAutoloader' => array(\n                'namespaces' => array(\n                    __NAMESPACE__ => __DIR__ . '/src/Zendcart'\n                )\n            )\n        );\n    }\n\n    public function getConfig()\n    {\n        return include __DIR__ . '/config/module.config.php';\n    }\n}\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":20},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/n4z4/lavoro/ZendCart/Module.php","digestWhenLastPersisted":"7cb850cf8b6e1a5b77f2389fc172eb2b4ab232cf","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":false,"scrollRow":15,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/n4z4/lavoro/ZendCart/composer.json","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":8,"softTabs":true,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/n4z4/lavoro/ZendCart/src/Zendcart/Controller/Plugin/ZendCart.php","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":12,"softTabs":true,"displayBuffer":{"deserializer":"DisplayBuffer","id":13,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/n4z4/lavoro/ZendCart/src/Zendcart/Event/CartEvent.php","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":16,"softTabs":true,"displayBuffer":{"deserializer":"DisplayBuffer","id":17,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/n4z4/lavoro/ZendCart/src/Zendcart/Factory/ZendCartFactory.php","largeFileMode":false},"largeFileMode":false}},{"deserializer":"TextEditor","id":20,"softTabs":true,"displayBuffer":{"deserializer":"DisplayBuffer","id":21,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/n4z4/lavoro/ZendCart/Module.php","largeFileMode":false},"largeFileMode":false}}],"activeItemURI":"/Users/n4z4/lavoro/ZendCart/composer.json","focused":false,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-json","language-php","language-html","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"fuzzy-finder":{"/Users/n4z4/lavoro/ZendCart/composer.json":1449508654815,"/Users/n4z4/lavoro/ZendCart/src/Zendcart/Controller/Plugin/ZendCart.php":1449508623120,"/Users/n4z4/lavoro/ZendCart/src/Zendcart/Event/CartEvent.php":1449508626949,"/Users/n4z4/lavoro/ZendCart/src/Zendcart/Factory/ZendCartFactory.php":1449508628308,"/Users/n4z4/lavoro/ZendCart/Module.php":1449508637109},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/n4z4/lavoro/ZendCart":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"config":{"isExpanded":false,"entries":{}},"src":{"isExpanded":true,"entries":{"Zendcart":{"isExpanded":true,"entries":{"Controller":{"isExpanded":true,"entries":{"Plugin":{"isExpanded":true,"entries":{}}}},"Event":{"isExpanded":true,"entries":{}},"Factory":{"isExpanded":true,"entries":{}}}}}}}}},"selectedPath":"/Users/n4z4/lavoro/ZendCart/composer.json","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}