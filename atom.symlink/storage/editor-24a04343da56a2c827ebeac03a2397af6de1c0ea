{"version":1,"windowDimensions":{"x":21,"y":23,"width":1645,"height":975,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/n4z4/lavoro/laravel-env"],"buffers":[{"id":"d0ee243e27e5c666ee1fa9b4a27a7632","text":"workspace_container:\r\n    build: docker/data\r\n    volumes:\r\n        - /Users/n4z4/lavoro/jcommerce-jambopet:/home/dockerdev/app\r\n        - /Users/n4z4/.composer:/home/dockerdev/.composer\r\n        - /Users/n4z4/.ssh:/root/.ssh","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/n4z4/lavoro/laravel-env/docker-compose.local.yml","digestWhenLastPersisted":"c5d5fad87e93884fa4be27bf7192afc1202183ab","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"2446eb1dcb741f9efe6237917ad3ec98","text":"# workspace:\n#     build: docker/data\n#     extends:\n#       file: docker-compose.local.yml\n#       service: workspace_container\n\n# shell:\n#     build: docker/installer\n#     privileged: true\n#     command: /bin/zsh\n#     user: dockerdev\n#     working_dir: /home/dockerdev/app\n#     volumes_from:\n#         - workspace\n#     env_file: docker/main.env\n\n\nmysql:\n  image: mysql:latest\n  ports:\n    - \"3306:3306\"\n  volumes:\n    - laravel-dbdata:/var/lib/mysql\n  volume_driver: local\n  environment:\n    MYSQL_DATABASE: homestead\n    MYSQL_USER: homestead\n    MYSQL_PASSWORD: secret\n    MYSQL_ROOT_PASSWORD: 123\n\nphp:\n    image: stefanorg/docker-apache-php-zray-dev:5.6\n    ports:\n        - \"80:80\"\n        - \"10081:10081\"\n    links:\n        - mysql\n    volumes:\n          - /Users/n4z4/lavoro/laravel-quickstart:/home/dockerdev/app\n          - /Users/n4z4/.composer:/home/dockerdev/.composer\n          - /Users/n4z4/.ssh:/root/.ssh\n    privileged: true\n    environment:\n      DEV_UID: 502\n      DEV_GID: 20\n      BASE_URL: http://app.dev.local\n      HOME: /home/dockerdev\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":45,"column":26},"end":{"row":45,"column":26}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":6,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[45,23],[45,30]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[45,23],[45,30]],"newRange":[[45,23],[45,24]],"oldText":"laravel","newText":"a"}},{"type":"change","content":{"oldRange":[[45,24],[45,24]],"newRange":[[45,24],[45,25]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[45,25],[45,25]],"newRange":[[45,25],[45,26]],"oldText":"","newText":"p"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[45,26],[45,26]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/n4z4/lavoro/laravel-env/docker-compose.yml","digestWhenLastPersisted":"cfb6ff5662964af9e38a56b9c13452b7084251e9","preferredLineEnding":null,"nextMarkerId":3,"deserializer":"TextBuffer","version":5},{"id":"446cac90900778b61580f43eddfcd5f2","text":"#!/bin/sh\n#\n# A control-script for managing the docker-infrastructure components\n\n# The first parameter is the action name\naction=$1\n\n# All other arguments are parameters\nif [ \"$#\" -gt \"1\" ]; then\nshift\nparameters=$@\nfi\n\n# Paths\nSCRIPTNAME=$(basename $0)\nSCRIPTPATH=$(readlink -f \"$0\" 2>/dev/null)\nif [ \"$?\" != 0 ]; then\n    if [ ! -f \"docker-compose.yml\" ]; then\n\t>&2 echo \" The $SCRIPTNAME-script will only work (on Mac OS) if you execute it from the project directory itself.\"\n\texit 1\n    fi\n    SCRIPTPATH=\"$(pwd -P)/$SCRIPTNAME\"\nfi\nPROJECTPATH=$(dirname \"$SCRIPTPATH\")\n\n# Switch into the project directory\ncd $PROJECTPATH\n\n# Mandatory Tools\nDOCKER=$(which docker)\nif [ -z \"$DOCKER\" ];\nthen\n    echo \"'docker' was not found on your system.\" >&2\n    exit 1\nfi\n\nDOCKERCOMPOSE=$(which docker-compose)\nif [ -z \"$DOCKERCOMPOSE\" ];\nthen\n    echo \"'docker-compose' was not found on your system.\" >&2\n    exit 1\nfi\n\n# Utils\nXARGS=$(which xargs)\nGREP=$(which grep)\nSED=$(which sed)\n\nDEVUSER=dockerdev\n\n#########################################################################\n# Get the full container name for the given container type (e.g. \"php\")\n# Arguments:\n#  CONTAINER_TYPE\n# Returns:\n#  The full name of the (first) container with the given type\n#########################################################################\ngetContainerNameByType() {\n    # abort if no type is specified\n    local CONTAINER_TYPE=\"$1\"\n    if [ -z \"$CONTAINER_TYPE\" ];\n    then\n        echo \"No container type specified. Please specifiy a container type (e.g. php, installer, mysql, nginx, ...).\"  >&2\n        return 1\n    fi\n\n    # check if xargs is available\n    if [ -z \"$XARGS\" ];\n    then\n        echo \"The tool 'xargs' was not found on your system.\" >&2\n        return 1\n    fi\n\n    # check if grep is available\n    if [ -z \"$GREP\" ];\n    then\n        echo \"The tool 'grep' was not found on your system.\" >&2\n        return 1\n    fi\n\n    # check if sed is available\n    if [ -z \"$SED\" ];\n    then\n        echo \"The tool 'sed' was not found on your system.\" >&2\n        return 1\n    fi\n\n    local containerName=$($DOCKER ps -q | \"$XARGS\" $DOCKER inspect --format '{{.Name}}' | \"$GREP\" \"$CONTAINER_TYPE\" | \"$SED\" 's:/::' | \"$GREP\" \"$CONTAINER_TYPE_1\")\n    echo $containerName\n    return 0\n}\n\nexecuteComposer() {\n    local containerType=\"php\"\n    local containerName=$(getContainerNameByType $containerType)\n    if [ -z \"$containerName\" ];\n    then\n        echo \"Cannot determine the name of the container.\" >&2\n        return 1\n    fi\n\n    \"$DOCKER\" exec -u \"$DEVUSER\" $containerName /var/www/html/composer.phar --working-dir=\"/var/www/html\" $@\n    return 0\n}\n\nexecutePhp() {\n    local containerType=\"php\"\n    local containerName=$(getContainerNameByType $containerType)\n    if [ -z \"$containerName\" ];\n    then\n        echo \"Cannot determine the name of the container.\" >&2\n        return 1\n    fi\n    #php -r 'echo E_ALL & ~E_NOTICE & ~E_WARNING;' => 32757\n    \"$DOCKER\" exec -u \"$DEVUSER\" $containerName /usr/local/bin/php -d error_reporting=32757 -f $@\n    return 0\n}\n\nexecutePhpDebug() {\n    local containerType=\"php\"\n    local containerName=$(getContainerNameByType $containerType)\n    if [ -z \"$containerName\" ];\n    then\n        echo \"Cannot determine the name of the container.\" >&2\n        return 1\n    fi\n    #php -r 'echo E_ALL & ~E_NOTICE & ~E_WARNING;' => 32757\n    #per eseguire il debug è necessario settare come remote host il gateway di docker\n    #https://sandro-keil.de/blog/2015/10/05/docker-php-xdebug-cli-debugging/\n    \"$DOCKER\" exec -u \"$DEVUSER\" $containerName /usr/local/bin/php -d xdebug.remote_host=172.17.0.1 -d error_reporting=32757 -f $@\n    return 0\n}\n\nexecuteCommand() {\n    local containerType=\"php\"\n    local containerName=$(getContainerNameByType $containerType)\n    if [ -z \"$containerName\" ];\n    then\n        echo \"Cannot determine the name of the container.\" >&2\n        return 1\n    fi\n    #php -r 'echo E_ALL & ~E_NOTICE & ~E_WARNING;' => 32757\n    #per eseguire il debug è necessario settare come remote host il gateway di docker\n    #https://sandro-keil.de/blog/2015/10/05/docker-php-xdebug-cli-debugging/\n    \"$DOCKER\" exec -u \"$DEVUSER\" $containerName $@\n    return 0\n}\n\nenterContainer() {\n    local containerType=\"$1\"\n    if [ -z \"$containerType\" ];\n    then\n        echo \"No container type specified. Please specifiy a container type (e.g. php, installer, mysql, nginx, ...).\"  >&2\n        return 1\n    fi\n\n    local containerName=$(getContainerNameByType $containerType)\n    if [ -z \"$containerName\" ];\n    then\n        echo \"Cannot determine the name of the container.\" >&2\n        return 1\n    fi\n\n    \"$DOCKER\" exec -u \"$DEVUSER\" -ti $containerName bash\n    return 0\n}\n\nstart() {\n    \"$DOCKERCOMPOSE\" up -d && \"$DOCKERCOMPOSE\" logs\n}\n\nstop() {\n    \"$DOCKERCOMPOSE\" stop\n}\n\nrestart() {\n    \"$DOCKERCOMPOSE\" restart\n}\n\nstatus() {\n    \"$DOCKERCOMPOSE\" ps\n}\n\nstats() {\n    # check if sed is available\n    if [ -z \"$SED\" ];\n    then\n        echo \"Stats requires 'sed'. The tool was not found on your system.\" >&2\n        return 1\n    fi\n\n    \"$DOCKER\" ps -q | \"$XARGS\" \"$DOCKER\" inspect --format '{{.Name}}' | \"$SED\" 's:/::' | \"$XARGS\" \"$DOCKER\" stats\n}\n\ncomposer() {\n    executeComposer $parameters\n}\n\nenter() {\n    enterContainer $parameters\n}\n\ndestroy() {\n    \"$DOCKERCOMPOSE\" stop\n    \"$DOCKERCOMPOSE\" rm --force\n}\n\nphp() {\n    executePhp $parameters\n}\n\nexecute() {\n    executeCommand $parameters\n}\n\ndebug() {\n    executePhpDebug $parameters\n}\n\ncase \"$action\" in\n    start)\n    start\n    ;;\n\n    stop)\n    stop\n    ;;\n\n    restart)\n    restart\n    ;;\n\n    status)\n    status\n    ;;\n\n    stats)\n    stats\n    ;;\n\n    composer)\n    composer\n    ;;\n\n    enter)\n    enter\n    ;;\n\n    destroy)\n    destroy\n    ;;\n\n    php)\n    php\n    ;;\n\n    debug)\n    debug\n    ;;\n\n    exec)\n    execute\n    ;;\n    *)\n    echo \"usage : $0 start|stop|restart|status|stats|composer|php|debug|enter|destroy\n\n  start      Starts the docker containers\n  stop       Stops all docker containers\n  restart    Restarts all docker containers\n  status     Prints the status of all docker containers\n  stats      Displays live resource usage statistics of all containers\n  composer   Executes composer in the magento root directory\n  enter      Enters the bash of a given container type (e.g. php, mysql)\n  php        Execute php cli from container\n  exec       Execute arbitrary command from container\n  debug      Debug php cli from container root\n  destroy    Stops all containers and removes all data\n\"\n    ;;\nesac\n\nexit 0\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/n4z4/lavoro/laravel-env/container.sh","digestWhenLastPersisted":"f744f4702a1bfad9f5b4a86d3653d079b6903016","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/n4z4/lavoro/laravel-env/docker-compose.local.yml","bufferId":"d0ee243e27e5c666ee1fa9b4a27a7632","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":8,"softTabs":true,"firstVisibleScreenRow":11,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/n4z4/lavoro/laravel-env/docker-compose.yml","bufferId":"2446eb1dcb741f9efe6237917ad3ec98","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":12,"softTabs":true,"firstVisibleScreenRow":246,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":13,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/n4z4/lavoro/laravel-env/container.sh","bufferId":"446cac90900778b61580f43eddfcd5f2","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/n4z4/lavoro/laravel-env/container.sh","focused":false,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-yaml","language-shellscript","language-hyperlink","language-todo"],"destroyedItemURIs":["/Users/n4z4/lavoro/laravel-env/docker-images/php/5.6-dev/Dockerfile","/Users/n4z4/lavoro/laravel-env/README.md"]},"packageStates":{"fuzzy-finder":{"/Users/n4z4/lavoro/laravel-env/docker-compose.local.yml":1456345665377,"/Users/n4z4/lavoro/laravel-env/docker-compose.yml":1456345667440,"/Users/n4z4/lavoro/laravel-env/container.sh":1456345689015},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/n4z4/lavoro/laravel-env":{"isExpanded":true,"entries":{}}},"selectedPath":"/Users/n4z4/lavoro/laravel-env/container.sh","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":309},"keybinding-resolver":{}},"fullScreen":false}